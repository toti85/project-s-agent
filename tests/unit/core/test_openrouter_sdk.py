#!/usr/bin/env python3
"""
OpenRouter SDK Integr√°ci√≥ Teszt
"""

import os
import sys

def test_openai_sdk_import():
    """OpenAI SDK el√©rhet≈ës√©g tesztel√©se"""
    try:
        import openai
        print("‚úÖ OpenAI SDK el√©rhet≈ë")
        return True
    except ImportError:
        print("‚ùå OpenAI SDK hi√°nyzik - telep√≠tsd: pip install openai")
        return False

def test_api_key():
    """API kulcs el√©rhet≈ës√©g tesztel√©se"""
    api_key = os.environ.get("OPENROUTER_API_KEY")
    if api_key:
        print(f"‚úÖ OpenRouter API kulcs el√©rhet≈ë: {api_key[:20]}...{api_key[-10:]}")
        return True
    else:
        print("‚ùå OpenRouter API kulcs nem tal√°lhat√≥")
        return False

def test_openrouter_with_openai_sdk():
    """OpenRouter tesztel√©se OpenAI SDK-val"""
    if not test_openai_sdk_import():
        return False
    
    if not test_api_key():
        return False
    
    try:
        from openai import OpenAI
        
        # OpenRouter kliens l√©trehoz√°sa OpenAI SDK-val
        client = OpenAI(
            base_url="https://openrouter.ai/api/v1",
            api_key=os.environ.get("OPENROUTER_API_KEY")
        )
        
        print("‚úÖ OpenRouter kliens l√©trehozva OpenAI SDK-val")
        
        # Teszt √ºzenet k√ºld√©se
        response = client.chat.completions.create(
            model="qwen/qwen3-235b-a22b",
            messages=[
                {
                    "role": "user",
                    "content": "Hello! Please respond with exactly: 'OpenRouter SDK integration successful!'"
                }
            ],
            max_tokens=50,
            temperature=0.1,
            extra_headers={
                "HTTP-Referer": "https://project-s-agent.local",
                "X-Title": "Project-S Multi-AI Agent System"
            }
        )
        
        result = response.choices[0].message.content
        print(f"‚úÖ OpenRouter v√°lasz: {result}")
        
        # Token haszn√°lat ellen≈ërz√©se
        if hasattr(response, 'usage'):
            print(f"üìä Token haszn√°lat: {response.usage}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå OpenRouter SDK teszt sikertelen: {e}")
        return False

def test_multi_model_client():
    """Project-S multi-model kliens tesztel√©se"""
    try:
        from integrations.multi_model_ai_client import multi_model_ai_client
        print("‚úÖ Multi-model kliens import√°lva")
        
        # El√©rhet≈ë modellek list√°z√°sa
        models = multi_model_ai_client.list_available_models()
        print(f"‚úÖ El√©rhet≈ë modellek: {len(models)}")
        for model in models:
            print(f"   - {model['provider']}: {model['model_id']}")
        
        # Aj√°nlott modell lek√©r√©se
        recommended = multi_model_ai_client.get_recommended_model()
        print(f"‚úÖ Aj√°nlott modell: {recommended}")
        
        # Kapcsolat tesztel√©se
        print("\nüß™ Kapcsolat tesztel√©se...")
        test_results = multi_model_ai_client.test_connection()
        
        for provider, result in test_results.items():
            status = "‚úÖ" if result["success"] else "‚ùå"
            print(f"{status} {provider}: {result['message']}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå Multi-model kliens teszt sikertelen: {e}")
        import traceback
        traceback.print_exc()
        return False

def main():
    print("üöÄ OpenRouter OpenAI SDK Integr√°ci√≥ Teszt")
    print("=" * 50)
    
    success_count = 0
    total_tests = 3
    
    print("\n1. OpenAI SDK Teszt:")
    if test_openai_sdk_import():
        success_count += 1
    
    print("\n2. K√∂zvetlen OpenRouter SDK Teszt:")
    if test_openrouter_with_openai_sdk():
        success_count += 1
    
    print("\n3. Project-S Multi-Model Kliens Teszt:")
    if test_multi_model_client():
        success_count += 1
    
    print("\n" + "=" * 50)
    print(f"üìä Eredm√©ny: {success_count}/{total_tests} teszt sikeres")
    
    if success_count == total_tests:
        print("üéâ Minden teszt sikeres! OpenRouter integr√°ci√≥ m≈±k√∂dik!")
    else:
        print("‚ö†Ô∏è N√©h√°ny teszt sikertelen. Ellen≈ërizd a hiba√ºzeneteket.")
    
    return success_count == total_tests

if __name__ == "__main__":
    main()
